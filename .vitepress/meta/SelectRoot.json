{
  "props": [
    {
      "name": "autocomplete",
      "description": "<p>Native html input <code>autocomplete</code> attribute.</p>",
      "type": "string",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "by",
      "description": "<p>Use this to compare objects by a particular field, or pass your own comparison function for complete control over how objects are compared.</p>",
      "type": "string | ((a: AcceptableValue, b: AcceptableValue) => boolean)",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "color",
      "description": "",
      "type": "\"indigo\" | \"gray\" | \"gold\" | \"bronze\" | \"brown\" | \"yellow\" | \"amber\" | \"orange\" | \"tomato\" | \"red\" | \"ruby\" | \"crimson\" | \"pink\" | \"plum\" | \"purple\" | \"violet\" | \"iris\" | \"blue\" | \"cyan\" | \"teal\" | \"jade\" | \"green\" | \"grass\" | \"lime\" | \"mint\" | \"sky\"",
      "required": false,
      "inherit": null
    },
    {
      "name": "defaultOpen",
      "description": "<p>The open state of the select when it is initially rendered. Use when you do not need to control its open state.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "defaultValue",
      "description": "<p>The value of the select when initially rendered. Use when you do not need to control the state of the Select</p>",
      "type": "AcceptableValue | AcceptableValue[]",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "dir",
      "description": "<p>The reading direction of the combobox when applicable. <br> If omitted, inherits globally from <code>ConfigProvider</code> or assumes LTR (left-to-right) reading mode.</p>",
      "type": "\"ltr\" | \"rtl\"",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "disabled",
      "description": "<p>When <code>true</code>, prevents the user from interacting with Select</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "highContrast",
      "description": "",
      "type": "boolean",
      "required": false,
      "inherit": null
    },
    {
      "name": "modelValue",
      "description": "<p>The controlled value of the Select. Can be bind as <code>v-model</code>.</p>",
      "type": "AcceptableValue | AcceptableValue[]",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "multiple",
      "description": "<p>Whether multiple options can be selected or not.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "name",
      "description": "<p>The name of the field. Submitted with its owning form as part of a name/value pair.</p>",
      "type": "string",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "open",
      "description": "<p>The controlled open state of the Select. Can be bind as <code>v-model:open</code>.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "required",
      "description": "<p>When <code>true</code>, indicates that the user must set the value before the owning form can be submitted.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "size",
      "description": "",
      "type": "\"1\" | \"2\" | \"3\"",
      "required": false,
      "inherit": null
    }
  ],
  "events": [
    {
      "name": "update:modelValue",
      "type": "[value: AcceptableValue]"
    },
    {
      "name": "update:open",
      "type": "[value: boolean]"
    }
  ],
  "slots": [],
  "methods": []
}