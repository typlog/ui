{
  "props": [
    {
      "name": "as",
      "description": "<p>The element or component this component should render as. Can be overwritten by <code>asChild</code>.</p>",
      "type": "AsTag | Component",
      "required": false,
      "inherit": "reka-ui",
      "default": "\"div\""
    },
    {
      "name": "asChild",
      "description": "<p>Change the default rendered element for the one passed as a child, merging their props and behavior.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "disabled",
      "description": "",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "placeholder",
      "description": "",
      "type": "string",
      "required": false,
      "inherit": null
    },
    {
      "name": "radius",
      "description": "",
      "type": "\"none\" | \"small\" | \"medium\" | \"large\" | \"full\"",
      "required": false,
      "inherit": null
    },
    {
      "name": "reference",
      "description": "<p>The reference (or anchor) element that is being referred to for positioning.</p>\n<p>If not provided will use the current component as anchor.</p>",
      "type": "ReferenceElement",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "variant",
      "description": "",
      "type": "\"soft\" | \"surface\" | \"ghost\"",
      "required": false,
      "inherit": null
    }
  ],
  "events": [],
  "slots": [
    {
      "name": "selectedLabel",
      "description": "",
      "type": "string[]"
    },
    {
      "name": "modelValue",
      "description": "",
      "type": "AcceptableValue | AcceptableValue[] | undefined"
    }
  ],
  "methods": []
}