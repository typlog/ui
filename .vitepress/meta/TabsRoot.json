{
  "props": [
    {
      "name": "activationMode",
      "description": "<p>Whether a tab is activated automatically (on focus) or manually (on click).</p>",
      "type": "\"automatic\" | \"manual\"",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "as",
      "description": "<p>The element or component this component should render as. Can be overwritten by <code>asChild</code>.</p>",
      "type": "AsTag | Component",
      "required": false,
      "inherit": "reka-ui",
      "default": "\"div\""
    },
    {
      "name": "asChild",
      "description": "<p>Change the default rendered element for the one passed as a child, merging their props and behavior.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "defaultValue",
      "description": "<p>The value of the tab that should be active when initially rendered. Use when you do not need to control the state of the tabs</p>",
      "type": "string | number",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "dir",
      "description": "<p>The reading direction of the combobox when applicable. &lt;br&gt; If omitted, inherits globally from <code>ConfigProvider</code> or assumes LTR (left-to-right) reading mode.</p>",
      "type": "\"ltr\" | \"rtl\"",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "modelValue",
      "description": "<p>The controlled value of the tab to activate. Can be bind as <code>v-model</code>.</p>",
      "type": "string | number",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "orientation",
      "description": "<p>The orientation the tabs are laid out.\nMainly so arrow navigation is done accordingly (left &amp; right vs. up &amp; down)</p>",
      "type": "\"vertical\" | \"horizontal\"",
      "required": false,
      "inherit": "reka-ui"
    },
    {
      "name": "unmountOnHide",
      "description": "<p>When <code>true</code>, the element will be unmounted on closed state.</p>",
      "type": "boolean",
      "required": false,
      "inherit": "reka-ui"
    }
  ],
  "events": [
    {
      "name": "update:modelValue",
      "type": "StringOrNumber"
    }
  ],
  "slots": [
    {
      "name": "modelValue",
      "description": "<p>Current input values</p>\n",
      "type": "string | number"
    }
  ],
  "methods": []
}